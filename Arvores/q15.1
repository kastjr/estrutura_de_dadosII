#include <iostream>
#include <list>

using namespace std;

class Graph {
private:
    int numVertices;             // Número de vértices no grafo
    list<int>* adjList;          // Vetor de listas ligadas para representar as arestas

public:
    // Construtor
    Graph(int V) {
        numVertices = V;
        adjList = new list<int>[V];
    }

    // Adiciona uma aresta entre os vértices v1 e v2
    void addEdge(int v1, int v2) {
        adjList[v1].push_back(v2);
        adjList[v2].push_back(v1);
    }

    // Mostra a representação do grafo
    void printGraph() {
        for (int v = 0; v < numVertices; ++v) {
            cout << "Vértice " << v << " --> ";
            for (auto it = adjList[v].begin(); it != adjList[v].end(); ++it) {
                cout << *it << " ";
            }
            cout << endl;
        }
    }
};

int main() {
    // Criação do grafo com 6 vértices
    Graph g(6);

    // Adição das arestas
    g.addEdge(0, 2);
    g.addEdge(0, 1);
    g.addEdge(1, 3);
    g.addEdge(2, 3);
    g.addEdge(3, 5);
    g.addEdge(4, 5);

    // Exibição do grafo
    g.printGraph();

    return 0;
}
